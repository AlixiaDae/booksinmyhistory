(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>d});var r=t(537),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([n.id,"body {\r\n    margin: 0;\r\n    padding: 0;\r\n    min-height: 100vh;\r\n}\r\n\r\n.main-body { \r\n    background-color: rgb(252, 242, 228);\r\n    padding: 5px;\r\n    height: calc(100vh - 15px);\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n}\r\n\r\nnav {\r\n    padding: 15px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n}\r\n\r\nnav > div {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 15px;\r\n}\r\n\r\nnav > div > :first-child {\r\n    height: 50px;\r\n}\r\n\r\nh1 {\r\n    font-size: 40px;\r\n    margin: 0;\r\n    width: 300px;\r\n}\r\n\r\n#add-book {\r\n    height: 45px;\r\n    width: 130px;\r\n    border-style: none;\r\n    border-radius: 10px;\r\n    background-color: red;\r\n    color: whitesmoke;\r\n    font-size: 20px;\r\n    box-shadow: 2px 2px 1px rgb(202, 193, 179);\r\n}\r\n\r\nform {\r\n    display: flex;\r\n    text-align: center;\r\n    justify-content: center;\r\n}\r\n\r\nlegend {\r\n    font-size: 25px;\r\n}\r\n\r\nfieldset {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 250px;\r\n    align-items: center;\r\n    gap: 5px;\r\n    padding: 0px 10px 15px 10px;\r\n}\r\n\r\nfieldset > :not(:nth-child(4)) {\r\n    flex-direction: column;\r\n}\r\n\r\nfieldset > :not(:nth-child(4)),\r\nfieldset > :nth-child(4),\r\nfieldset > :nth-child(4) > div {\r\n    display: flex;\r\n    gap: 5px;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n\r\nfieldset > :nth-child(4) {\r\n    height: 30px;\r\n}\r\n\r\nfieldset > :last-child > div {\r\n    margin-top: 5px;\r\n}\r\n\r\ninput[type='radio'] {\r\n    margin: 0;\r\n}\r\n\r\n#submit-new-book {\r\n    height: 25px;\r\n}\r\n\r\n.shelf {\r\n    display: flex;\r\n    gap: 5px;\r\n    margin-top: 5px;\r\n    justify-content: center;\r\n}\r\n\r\n.bookcard {\r\n    height: 250px;\r\n    width: 200px;\r\n    border: 1px solid;\r\n    border-radius: 10px;\r\n    padding: 5px;\r\n    text-align: center;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n}\r\n\r\n.bookcard > p {\r\n    margin: 5px;\r\n}\r\n\r\n#add-book:hover {\r\n    background-color: rgb(211, 4, 4);\r\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;IACV,iBAAiB;AACrB;;AAEA;IACI,oCAAoC;IACpC,YAAY;IACZ,0BAA0B;IAC1B,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,aAAa;IACb,aAAa;IACb,mBAAmB;IACnB,8BAA8B;AAClC;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,eAAe;IACf,SAAS;IACT,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,kBAAkB;IAClB,mBAAmB;IACnB,qBAAqB;IACrB,iBAAiB;IACjB,eAAe;IACf,0CAA0C;AAC9C;;AAEA;IACI,aAAa;IACb,kBAAkB;IAClB,uBAAuB;AAC3B;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,YAAY;IACZ,mBAAmB;IACnB,QAAQ;IACR,2BAA2B;AAC/B;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;;;IAGI,aAAa;IACb,QAAQ;IACR,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,SAAS;AACb;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,QAAQ;IACR,eAAe;IACf,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,YAAY;IACZ,iBAAiB;IACjB,mBAAmB;IACnB,YAAY;IACZ,kBAAkB;IAClB,aAAa;IACb,sBAAsB;IACtB,8BAA8B;AAClC;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,gCAAgC;AACpC",sourcesContent:["body {\r\n    margin: 0;\r\n    padding: 0;\r\n    min-height: 100vh;\r\n}\r\n\r\n.main-body { \r\n    background-color: rgb(252, 242, 228);\r\n    padding: 5px;\r\n    height: calc(100vh - 15px);\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n}\r\n\r\nnav {\r\n    padding: 15px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n}\r\n\r\nnav > div {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 15px;\r\n}\r\n\r\nnav > div > :first-child {\r\n    height: 50px;\r\n}\r\n\r\nh1 {\r\n    font-size: 40px;\r\n    margin: 0;\r\n    width: 300px;\r\n}\r\n\r\n#add-book {\r\n    height: 45px;\r\n    width: 130px;\r\n    border-style: none;\r\n    border-radius: 10px;\r\n    background-color: red;\r\n    color: whitesmoke;\r\n    font-size: 20px;\r\n    box-shadow: 2px 2px 1px rgb(202, 193, 179);\r\n}\r\n\r\nform {\r\n    display: flex;\r\n    text-align: center;\r\n    justify-content: center;\r\n}\r\n\r\nlegend {\r\n    font-size: 25px;\r\n}\r\n\r\nfieldset {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 250px;\r\n    align-items: center;\r\n    gap: 5px;\r\n    padding: 0px 10px 15px 10px;\r\n}\r\n\r\nfieldset > :not(:nth-child(4)) {\r\n    flex-direction: column;\r\n}\r\n\r\nfieldset > :not(:nth-child(4)),\r\nfieldset > :nth-child(4),\r\nfieldset > :nth-child(4) > div {\r\n    display: flex;\r\n    gap: 5px;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n\r\nfieldset > :nth-child(4) {\r\n    height: 30px;\r\n}\r\n\r\nfieldset > :last-child > div {\r\n    margin-top: 5px;\r\n}\r\n\r\ninput[type='radio'] {\r\n    margin: 0;\r\n}\r\n\r\n#submit-new-book {\r\n    height: 25px;\r\n}\r\n\r\n.shelf {\r\n    display: flex;\r\n    gap: 5px;\r\n    margin-top: 5px;\r\n    justify-content: center;\r\n}\r\n\r\n.bookcard {\r\n    height: 250px;\r\n    width: 200px;\r\n    border: 1px solid;\r\n    border-radius: 10px;\r\n    padding: 5px;\r\n    text-align: center;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n}\r\n\r\n.bookcard > p {\r\n    margin: 5px;\r\n}\r\n\r\n#add-book:hover {\r\n    background-color: rgb(211, 4, 4);\r\n}"],sourceRoot:""}]);const d=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var d=0;d<this.length;d++){var c=this[d][0];null!=c&&(a[c]=!0)}for(var s=0;s<n.length;s++){var l=[].concat(n[s]);r&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var i={},a=[],d=0;d<n.length;d++){var c=n[d],s=r.base?c[0]+r.base:c[0],l=i[s]||0,A="".concat(s," ").concat(l);i[s]=l+1;var p=t(A),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var h=o(u,r);r.byIndex=d,e.splice(d,0,{identifier:A,updater:h,references:1})}a.push(A)}return a}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var i=r(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var d=t(i[a]);e[d].references--}for(var c=r(n,o),s=0;s<i.length;s++){var l=t(i[s]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}i=c}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var i=e[r]={id:r,exports:{}};return n[r](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),o=t.n(r),i=t(569),a=t.n(i),d=t(565),c=t.n(d),s=t(216),l=t.n(s),A=t(589),p=t.n(A),u=t(426),h={};h.styleTagTransform=p(),h.setAttributes=c(),h.insert=a().bind(null,"head"),h.domAPI=o(),h.insertStyleElement=l(),e()(u.Z,h),u.Z&&u.Z.locals&&u.Z.locals;class m{constructor(){this.books=[]}getBooks(){return this.books}constainsBook(n){return this.books.some((e=>e.title===n.title))}addBook(n){this.books.find((e=>e.title===n.title))||this.books.push(n)}removeBook(n){let e=this.books.indexOf(n);this.books.splice(e,1)}}class f{constructor(n,e,t){this.title=n,this.author=e,this.medium=t}getName(){return this.title}}const C=t.p+"b195dc9ed025af924502.png";(()=>{let n=new m,e=new f("Harry Potter and the Philosopher's Stone","J.K. Rowling","physical"),t=new f("Graceling","Kristin Cashore","physical"),r=new f("Magyk","Angie Sage","physical");n.addBook(e),n.addBook(t),n.addBook(r);const o=document.createElement("div");o.classList.add("main-body"),document.body.appendChild(o);const i=document.createElement("nav");o.appendChild(i);const a=document.createElement("div");i.appendChild(a);const d=document.createElement("img");d.src=C,a.appendChild(d);const c=document.createElement("h1");c.textContent="My Alexandria",a.appendChild(c);const s=document.createElement("button");s.id="add-book",s.textContent="+ Add Book",i.appendChild(s);const l=document.createElement("form");l.style.display="none",o.appendChild(l);const A=document.createElement("fieldset");l.appendChild(A);const p=document.createElement("legend");p.textContent="New Book",A.appendChild(p);const u=document.createElement("div");A.appendChild(u);const h=document.createElement("label");h.setAttribute("for","title"),h.textContent="Title:",u.appendChild(h);const x=document.createElement("input");x.name="name",x.id="name",u.appendChild(x);const g=document.createElement("div");A.appendChild(g);const b=document.createElement("label");b.setAttribute("for","author"),b.textContent="Author:",g.appendChild(b);const v=document.createElement("input");v.name="author",v.id="author",g.appendChild(v);const B=document.createElement("div");A.appendChild(B);const y=document.createElement("div");B.appendChild(y);const I=document.createElement("input");I.setAttribute("type","radio"),I.name="medium",I.id="physical",y.appendChild(I);const k=document.createElement("label");k.setAttribute("for","physical"),k.textContent="Physical Copy",y.appendChild(k);const E=document.createElement("div");B.appendChild(E);const w=document.createElement("input");w.setAttribute("type","radio"),w.name="medium",w.id="online",E.appendChild(w);const S=document.createElement("label");S.setAttribute("for","online"),S.textContent="Online Copy",E.appendChild(S);const j=document.createElement("button");j.id="submit-new-book",j.textContent="Add new book",A.appendChild(j),j.addEventListener("click",(e=>{e.preventDefault();const t=x,r=v;let o="";if(o=I.checked?I:w,""===t.value)return;""===r.value&&(r.value="Unknown");const i=new f(t.value,r.value,o.id);n.constainsBook(i)||(n.addBook(i),console.log(o.id),Y.textContent="",t.value="",r.value="",I.checked=!1,w.checked=!1,T())})),s.addEventListener("click",(()=>{"flex"===l.style.display?l.style.display="none":l.style.display="flex"}));const Y=document.createElement("div");function T(){for(let e=0;e<n.getBooks().length;e++){const t=document.createElement("div");t.classList.add("bookcard"),Y.appendChild(t);const r=document.createElement("p");r.textContent=n.getBooks()[e].title,t.appendChild(r);const o=document.createElement("p");null===n.getBooks()[e].author?o.textContent="Unknown":o.textContent=n.getBooks()[e].author,t.appendChild(o)}}Y.classList.add("shelf"),o.appendChild(Y),T()})()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,